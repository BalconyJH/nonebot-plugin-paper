[project]
name = "nonebot-plugin-paper"
version = "0.1.0"
description = "build a world of open science."
authors = [
    { name = "BalconyJH", email = "balconyjh@gmail.com" },
]
dependencies = [
    "nonebot2>=2.1.1",
    "nonebot-plugin-localstore>=0.5.1",
    "nonebot-plugin-apscheduler>=0.3.0",
    "nonebot-plugin-htmlrender>=0.6.0",
    "nonebot-plugin-uninfo>=0.5.0",
    "nonebot-plugin-alconna>=0.53.1",
    "aioarxiv>=0.2.0",
    "nonebot-plugin-waiter>=0.8.1",
]
requires-python = ">=3.9"
readme = "README.md"
license = { file = "LICENSE" }

[project.optional-dependencies]
#sentry = ["nonebot-plugin-sentry>=1.0.0"]

[dependency-groups]
dev = [
    "nonebot2[fastapi]>=2.4.0",
    "nonebot-adapter-onebot>=2.4.6",
    "ruff>=0.7.4",
    "pre-commit>=4.0.1",
]
test = [
    "nonebug>=0.4.2",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "pytest-xdist>=3.6.1",
    "pytest-mock>=3.14.0",
]

[tool.uv.pip]
universal = true

[tool.nonebot]
adapters = [
    { name = "OneBot V12", module_name = "nonebot.adapters.onebot.v12", project_link = "nonebot-adapter-onebot", desc = "OneBot V12 协议" },
    { name = "OneBot V11", module_name = "nonebot.adapters.onebot.v11", project_link = "nonebot-adapter-onebot", desc = "OneBot V11 协议" },
]
plugins = ["nonebot_plugin_paper"]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.format]
line-ending = "lf"

[tool.ruff.lint]
select = [
    "F",     # Pyflakes
    "W",     # pycodestyle warnings
    "E",     # pycodestyle errors
    "I",     # isort
    "UP",    # pyupgrade
    "ASYNC", # flake8-async
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "DTZ",   # flake8-datetimez
    "T10",   # flake8-debugger
    "T20",   # flake8-print
    "PYI",   # flake8-pyi
    "PT",    # flake8-pytest-style
    "Q",     # flake8-quotes
    "SIM",   # flake8-simplify
    "TID",   # flake8-tidy-imports
    "PLE",   # Pylint errors
    "NPY",   # NumPy-specific rules
    "RUF",   # Ruff-specific rules
]
ignore = [
    "E402",   # module-import-not-at-top-of-file
    "UP037",  # quoted-annotation
    "RUF001", # ambiguous-unicode-character-string
    "RUF002", # ambiguous-unicode-character-docstring
    "RUF003", # ambiguous-unicode-character-comment
]

[tool.ruff.lint.isort]
force-sort-within-sections = true
known-first-party = ["nonebot_plugin_paper", "tests/*"]
extra-standard-library = ["typing_extensions"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.pyright]
pythonVersion = "3.9"
pythonPlatform = "All"
typeCheckingMode = "standard"
defineConstant = { PYDANTIC_V2 = true }

[tool.pytest.ini_options]
asyncio_mode = "auto"
addopts = ["--import-mode=importlib"]
asyncio_default_fixture_loop_scope = "session"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@overload",
    "except ImportError:",
]
omit = ["*/compat.py", "*/migrations/*"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["nonebot_plugin_paper"]

[tool.hatch.build.targets.sdist]
only-include = ["nonebot_plugin_paper"]
